class Rotation
{
     type = "rotation";
     memory = 1;
     minValue = 0;
     maxValue = 1;
     angle0 = 0;
     angle1 = 1;
};
class CfgSkeletons
{
     class Default
     {
          isDiscrete = 1;
          skeletonInherit = "";
          skeletonBones[] = {};
     };
     class Vehicle : Default {};
     class Car : Vehicle {
          skeletonBones[]=
          {
               "drivewheel","",

               "wheel_1_1_damper_land","",
               "wheel_1_2_damper_land","",
               "wheel_1_3_damper_land","",
               "wheel_1_4_damper_land","",

               "wheel_2_1_damper_land","",
               "wheel_2_2_damper_land","",
               "wheel_2_3_damper_land","",
               "wheel_2_4_damper_land","",

               "wheel_1_1_damper","wheel_1_1_damper_land",
               "wheel_1_2_damper","wheel_1_2_damper_land",
               "wheel_1_3_damper","wheel_1_3_damper_land",
               "wheel_1_4_damper","wheel_1_4_damper_land",

               "wheel_2_1_damper","wheel_2_1_damper_land",
               "wheel_2_2_damper","wheel_2_2_damper_land",
               "wheel_2_3_damper","wheel_2_3_damper_land",
               "wheel_2_4_damper","wheel_2_4_damper_land",

               "wheel_1_1_steering","wheel_1_1_damper",
               "wheel_1_2_steering","wheel_1_2_damper",
               "wheel_1_3_steering","wheel_1_3_damper",
               "wheel_1_4_steering","wheel_1_4_damper",

               "wheel_2_1_steering","wheel_2_1_damper",
               "wheel_2_2_steering","wheel_2_2_damper",
               "wheel_2_3_steering","wheel_2_3_damper",
               "wheel_2_4_steering","wheel_2_4_damper",

               "wheel_1_1","wheel_1_1_steering",
               "wheel_1_2","wheel_1_2_steering",
               "wheel_1_3","wheel_1_3_steering",
               "wheel_1_4","wheel_1_4_steering",

               "wheel_2_1","wheel_2_1_steering",
               "wheel_2_2","wheel_2_2_steering",
               "wheel_2_3","wheel_2_3_steering",
               "wheel_2_4","wheel_2_4_steering",

               "wheel_1_1_unhide","wheel_1_1",
               "wheel_1_2_unhide","wheel_1_2",
               "wheel_1_3_unhide","wheel_1_3",
               "wheel_1_4_unhide","wheel_1_4",

               "wheel_2_1_unhide","wheel_2_1",
               "wheel_2_2_unhide","wheel_2_2",
               "wheel_2_3_unhide","wheel_2_3",
               "wheel_2_4_unhide","wheel_2_4",

               "wheel_1_1_hide","wheel_1_1",
               "wheel_1_2_hide","wheel_1_2",
               "wheel_1_3_hide","wheel_1_3",
               "wheel_1_4_hide","wheel_1_4",

               "wheel_2_1_hide","wheel_2_1",
               "wheel_2_2_hide","wheel_2_2",
               "wheel_2_3_hide","wheel_2_3",
               "wheel_2_4_hide","wheel_2_4",

               "OtocVez","",
               "OtocHlaven","OtocVez",

               "damageHide","",
               "damageVez","OtocVez",
               "damageHlaven","OtocHlaven",

               "ukaz_rychlo","",
               "ukaz_rychlo2","",
               "ukaz_rpm","",
               "mph","",
               "rpm","",
               "fuel","",
               "fuel_1","",
               "fuel_01","",
               "fuel_2","",
               "fuel_3","",
               "prop_01","",
               "prop_02","",
               "prop_2","",
               "prop_1","",
               "glass1","damageHide",
               "glass2","damageHide",
               "glass3","damageHide",
               "glass4","damageHide"
          };
     };
     class WFAR_Ikarus : Car 
     {
               isdiscrete = 1;
               skeletonInherit="Car";
               skeletonBones[]=
               {
                    "reverse_light","",
                    "glass5","damageHide",
                    "glass6","damageHide"
               };
     };
};
               
                    
class CfgModels
{
     class Default
     {
          sectionsInherit = "";
          sections[] = {};
          skeletonName = "";
     };
     class Vehicle: Default
     {
          sections[] =
          {
               "cislo",
               "grupa",
               "side",
               "sektor",
               "clan",
               "clan_sign",
               "podsvit pristroju",
               "poskozeni",
               "L svetlo",
               "P svetlo",
               "zasleh"
          };
     };     
     
     class Car: Vehicle
     {
          htMin = 60;          // Minimum half-cooling time (in seconds)
          htMax = 180;     // Maximum half-cooling time (in seconds)
          afMax = 100;     // Maximum temperature in case the model is alive (in celsius)
          mfMax = 8;          // Maximum temperature when the model is moving (in celsius)
          mFact = 1;          // Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
          tBody = 150;     // Metabolism temperature of the model (in celsius)

          sections[]=
          {
               "ammo",
               "zadni svetlo",
               "brzdove svetlo",
               "spz",
               "motor",
               "body",
               "clan",
               "clan_sign",
               "zasleh",
               "Light_R",
               "Light_L",
               "podsvit pristroju",
               "glass1",
               "glass2",
               "glass3",
               "glass4",
               "glass5",
               "glass6"
          };
          skeletonName="Car";
          class Animations
          {
               // destruct START
               class damageHide
               {
                    type="hide";
                    source="damage";
                    selection="damageHide";
                    hideValue=1.0;
               };
               class damageHideVez:damageHide
               {
                    selection="OtocVez";
               };
               class damageHideHlaven:damageHide
               {
                    selection="OtocHlaven";
               };

               class wheel_1_1_destruct
               {
                    type="hide";
                    selection="wheel_1_1_hide";
                    source="HitLFWheel";
                    minValue = 0; // upravit na 0.99
                    maxValue = 1; // upravit na 1.0
                    hidevalue = 0.99999;
               };
               class wheel_1_2_destruct: wheel_1_1_destruct {source="HitLBWheel";selection="wheel_1_2_hide";};
               class wheel_1_3_destruct: wheel_1_1_destruct {source="HitLMWheel";selection="wheel_1_3_hide";};
               class wheel_1_4_destruct: wheel_1_1_destruct {source="HitLF2Wheel";selection="wheel_1_4_hide";};

               class wheel_2_1_destruct: wheel_1_1_destruct {source="HitRFWheel";selection="wheel_2_1_hide";};
               class wheel_2_2_destruct: wheel_1_1_destruct {source="HitRBWheel";selection="wheel_2_2_hide";};
               class wheel_2_3_destruct: wheel_1_1_destruct {source="HitRMWheel";selection="wheel_2_3_hide";};
               class wheel_2_4_destruct: wheel_1_1_destruct {source="HitRF2Wheel";selection="wheel_2_4_hide";};

               class wheel_1_1_destruct_unhide
               {
                    type="hide";
                    selection="wheel_1_1_unhide";
                    source="HitLFWheel";
                    minValue = 0; 
                    maxValue = 1; 
                    hidevalue = 0.00000;
                    UnHidevalue = 1.00000;
               };
               class wheel_1_2_destruct_unhide: wheel_1_1_destruct_unhide {source="HitLBWheel";selection="wheel_1_2_unhide";};
               class wheel_1_3_destruct_unhide: wheel_1_1_destruct_unhide {source="HitLMWheel";selection="wheel_1_3_unhide";};
               class wheel_1_4_destruct_unhide: wheel_1_1_destruct_unhide {source="HitLF2Wheel";selection="wheel_1_4_unhide";};

               class wheel_2_1_destruct_unhide: wheel_1_1_destruct_unhide {source="HitRFWheel";selection="wheel_2_1_unhide";};
               class wheel_2_2_destruct_unhide: wheel_1_1_destruct_unhide {source="HitRBWheel";selection="wheel_2_2_unhide";};
               class wheel_2_3_destruct_unhide: wheel_1_1_destruct_unhide {source="HitRMWheel";selection="wheel_2_3_unhide";};
               class wheel_2_4_destruct_unhide: wheel_1_1_destruct_unhide {source="HitRF2Wheel";selection="wheel_2_4_unhide";};

               #define DamageOffset 0.2

               class wheel_1_1_Damage: wheel_1_1_destruct
               {
                    type="translation";
                    axis="Basic_Damper_Destruct_Axis";
                    memory=1;
                    selection="wheel_1_1_damper";
                    source="HitLFWheel";
                    minValue = 0.0;
                    maxValue = 1;
                    offset0 = 0;
                    offset1 = DamageOffset;
               };
               class wheel_1_2_Damage: wheel_1_1_Damage {source="HitLBWheel";selection="wheel_1_2_damper";};
               class wheel_1_3_Damage: wheel_1_1_Damage {source="HitLMWheel";selection="wheel_1_3_damper";};
               class wheel_1_4_Damage: wheel_1_1_Damage {source="HitLF2Wheel";selection="wheel_1_4_damper";};

               class wheel_2_1_Damage: wheel_1_1_Damage {source="HitRFWheel";selection="wheel_2_1_damper";};
               class wheel_2_2_Damage: wheel_1_1_Damage {source="HitRBWheel";selection="wheel_2_2_damper";};
               class wheel_2_3_Damage: wheel_1_1_Damage {source="HitRMWheel";selection="wheel_2_3_damper";};
               class wheel_2_4_Damage: wheel_1_1_Damage {source="HitRF2Wheel";selection="wheel_2_4_damper";};


               class wheel_1_1_Damper_Damage_BackAnim: wheel_1_1_Damage {selection="wheel_1_1_damper";offset1 = -1.2*DamageOffset;};
               class wheel_1_2_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitLBWheel";selection="wheel_1_2_damper";};
               class wheel_1_3_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitLMWheel";selection="wheel_1_3_damper";};
               class wheel_1_4_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitLF2Wheel";selection="wheel_1_4_damper";};

               class wheel_2_1_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitRFWheel";selection="wheel_2_1_damper";};
               class wheel_2_2_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitRBWheel";selection="wheel_2_2_damper";};
               class wheel_2_3_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitRMWheel";selection="wheel_2_3_damper";};
               class wheel_2_4_Damper_Damage_BackAnim: wheel_1_1_Damper_Damage_BackAnim {source="HitRF2Wheel";selection="wheel_2_4_damper";};

                    class Glass1_destruct
                    {
                         type="hide";
                         selection="glass1";
                         source="HitGlass1";
                         minValue = 0; 
                         maxValue = 1; 
                         hidevalue = 0.99999;
                    };
                    class Glass2_destruct: Glass1_destruct {selection="glass2";source="HitGlass2";}; // Inherits from the the glass 1, only the selection and the source will be changed
                    class Glass3_destruct: Glass1_destruct {selection="glass3";source="HitGlass3";};
                    class Glass4_destruct: Glass1_destruct {selection="glass4";source="HitGlass4";};
                    
               class DrivingWheel: Rotation
               {
                    source="drivingWheel";
                    selection="drivewheel";
                    axis="drivewheel_axis";
                    minValue=-1;
                    maxValue=1;
                    angle0=(rad -60);
                    angle1=(rad 60);
               };
               class Steering_1_1
               {
                    type="rotationY";
                    source="drivingWheel";
                    selection="wheel_1_1_steering";
                    axis="wheel_1_1_steering_axis";
                    memory=1;
                    minValue= -0.5;
                    maxValue= 0.5;
                    angle0=(rad 30);
                    angle1=(rad -30);
               };
               class Steering_2_1: Steering_1_1
               {
                    selection="wheel_2_1_steering";
                    axis="wheel_2_1_steering_axis";
               };
               class Wheel_1_1
               {
                    type="rotationX";
                    source="wheel";
                    selection="wheel_1_1";
                    axis="wheel_1_1_axis";
                    memory=1;
                    sourceAddress="loop";
                    minValue=0;
                    maxValue=1;
                    angle0=0;
                    angle1="rad -360";
               };
               class wheel_2_1: Wheel_1_1
               {
                    selection="wheel_2_1";
                    axis="wheel_2_1_axis";
               };
               class wheel_1_2: Wheel_1_1
               {
                    selection="wheel_1_2";
                    axis="wheel_1_2_axis";
               };
               class wheel_1_3: Wheel_1_1
               {
                    selection="wheel_1_3";
                    axis="wheel_1_3_axis";
               };
               class Wheel_2_2: Wheel_1_1
               {
                    selection="wheel_2_2";
                    axis="wheel_2_2_axis";
               };
               class Wheel_2_3: Wheel_1_1
               {
                    selection="wheel_2_3";
                    axis="wheel_2_3_axis";
               };
               class Wheel_1_4: Wheel_1_1
               {
                    selection="wheel_1_4";
                    axis="wheel_1_4_axis";
               };
               class Wheel_2_4: Wheel_1_1
               {
                    selection="wheel_2_4";
                    axis="wheel_2_4_axis";
               };
               class Wheel_1_1_Damper
               {
                    type="translation";
                    source="damper";
                    selection="wheel_1_1_damper_land";
                    axis="posun wheel_1_1";
                    animPeriod =1;
                    minValue="0";
                    maxValue="1";
                    offset0= "-0.5";
                    offset1= "0";
                    memory=1;
               };
               class wheel_2_1_Damper: Wheel_1_1_Damper
               {
                    selection="wheel_2_1_damper_land";
               };
               class wheel_1_2_Damper: Wheel_1_1_Damper
               {
                    selection="wheel_1_2_damper_land";
               };
               class Wheel_2_2_Damper: Wheel_1_1_Damper
               {
                    selection="wheel_2_2_damper_land";
               };     
          };
     };
     class WFAR_Ikarus: Car
     {
          skeletonName="WFAR_Ikarus";
          sectionsInherit="Car";
          sections[]=
          {
               "ammo",
               "sklo predni p", //windscreen Right {abbr} 
               "sklo predni l", //windscreen Left {abbr} 
               "zadni svetlo", //      rear light 
               "brakeLight", // brake light 
               "interior_light", //interor light
               "wheel_1_1", //FL
               "wheel_1_2", //BL
               "wheel_2_1", //FR
               "wheel_2_2", //BR
               "clan",
               "clan_sign",
               "konec L svetla", //end (of) Right light {abbr} 
               "P svetlo", //Right light {abbr} 
               "konec L svetla", //end (of) Left light {abbr} 
               "L svetlo", //Left light {abbr} 
               "spz", //License Plate
               "zbytek", //rest (a rest position) or the rest (remainder) 
               "podsvit pristroju", //backlight (for) devices  - Dashboard
               "damageHide",
               "glass1",
               "glass2",
               "glass3",
               "glass4",
               "glass5",
               "glass6",
               "camo1"
          };
          class Animations:Animations
          {
                class Glass5_destruct:Glass1_destruct{selection="glass5";source="HitGlass5";};
               class Glass6_destruct:Glass1_destruct{selection="glass6";source="HitGlass6";};

               class damageHide
               {
                    type="hide";
                    source="damage";
                    selection="damageHide";
               };
               class IndicatorSpeed
               {
                    animPeriod=0;
                    type="rotation";
                    source="speed";
                    selection="ukaz_rychlo";
                    axis="osa_rychlo";
                    memory=0;
                    minValue=0.000000;
                    maxValue=32;
                    angle0=-rad 60;
                    angle1=rad 180;
               };
               class IndicatorSpeed2
               {
                    type="rotation";
                    source="speed";
                    selection="ukaz_rychlo2";
                    axis="osa_rychlo2";
                    memory=1;
                    animPeriod=0;
                    minValue=0;
                    maxValue=1;
                    angle0=0;
                    angle1="rad -240";
               };
               class IndicatorRPM
               {
                    animPeriod=0;
                    type="rotation";
                    source="rpm";
                    selection="ukaz_rpm";
                    axis="osa_rpm";
                    memory=0;
                    minValue=0.000000;
                    maxValue=1.000000;
                    angle0=-rad 135;
                    angle1=rad 120;
               };
               class reverse_light
               {
                    type="Hide";
                    selection="reverse_light";
                    sourceAddress="clamp";
                    source="Gear";
                    minValue = -1;
                    maxValue = 0;
                    hideValue = "0.2";     
               };
          };
     };
     class WFAR_Ikarus_Armoured: WFAR_Ikarus {};
};